/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/bacass Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                           = null

    // QC and trimming options
    fastp_args                      = ""
    save_trimmed                    = false
    save_trimmed_fail               = false

    // Contamination_screening
    kraken2db                       = ''
    kmerfinderdb                    = ''
    reference_fasta                 = ''
    reference_gff                   = ''
    ncbi_assembly_metadata          = ''

    // Assembly parameters
    assembler                       = 'unicycler'   // Allowed: ['unicycler', 'canu', 'miniasm', 'dragonflye']
    assembly_type                   = 'short'       // Allowed: ['short', 'long', 'hybrid', 'none'] (hybrid works only with Unicycler)
    unicycler_args                  = ""
    canu_mode                       = '-nanopore'   // Allowed: ['-pacbio', '-nanopore', '-pacbio-hifi']
    canu_args                       = ''            // Default no extra options, can be adjusted by the user
    dragonflye_args                 = ''

    // Assembly polishing
    polish_method                   = 'medaka'      // Allowed: ['medaka', 'nanopolish']

    // Annotation
    annotation_tool                 = 'prokka'      // Allowed: ['prokka', 'bakta','dfast']
    prokka_args                     = ""
    baktadb                         = ''
    baktadb_download                = false
    baktadb_download_args           = '--type light' // Allowed: ['--type light', '--type full']
    dfast_config                    = "$projectDir/assets/test_config_dfast.py"

    // ARG options
    run_arg_screening                                = true

    arg_skip_fargene                                 = true
    arg_fargene_hmmmodel                             = 'class_a,class_b_1_2,class_b_3,class_c,class_d_1,class_d_2,qnr,tet_efflux,tet_rpg,tet_enzyme'
    arg_fargene_savetmpfiles                         = false
    arg_fargene_minorflength                         = 90
    arg_fargene_score                                = null
    arg_fargene_translationformat                    = 'pearson'
    arg_fargene_orffinder                            = false

    arg_skip_rgi                                     = true
    arg_rgi_db                                       = null
    arg_rgi_savejson                                 = false
    arg_rgi_savetmpfiles                             = false
    arg_rgi_alignmenttool                            = 'BLAST'
    arg_rgi_includeloose                             = false
    arg_rgi_includenudge                             = false
    arg_rgi_lowquality                               = false
    arg_rgi_data                                     = 'NA'
    arg_rgi_split_prodigal_jobs                      = true

    arg_skip_amrfinderplus                           = true
    arg_amrfinderplus_db                             = null
    arg_amrfinderplus_identmin                       = -1
    arg_amrfinderplus_coveragemin                    = 0.5
    arg_amrfinderplus_translationtable               = 11
    arg_amrfinderplus_plus                           = false
    arg_amrfinderplus_name                           = false

    arg_skip_deeparg                                 = true
    arg_deeparg_db                                   = null
    arg_deeparg_db_version                           = 2     // Make sure to update on module version bump!
    arg_deeparg_model                                = 'LS'
    arg_deeparg_minprob                              = 0.8
    arg_deeparg_alignmentidentity                    = 50
    arg_deeparg_alignmentevalue                      = 1e-10
    arg_deeparg_alignmentoverlap                     = 0.8
    arg_deeparg_numalignmentsperentry                = 1000

    arg_skip_abricate                                = false
    arg_abricate_db_id                               = 'ncbi'
    arg_abricate_db                                  = null
    arg_abricate_minid                               = 80
    arg_abricate_mincov                              = 80

    arg_hamronization_summarizeformat                = 'tsv'

    arg_skip_argnorm                                 = false

    // Taxonomy options
    gambitdb                 = ''

    // Skipping options
    skip_fastqc                     = false
    skip_fastp                      = false
    skip_kraken2                    = false
    skip_kmerfinder                 = false
    skip_pycoqc                     = false
    skip_annotation                 = false
    skip_polish                     = false
    skip_multiqc                    = false

    // MultiQC options
    multiqc_config                  = null
    multiqc_title                   = null
    multiqc_logo                    = null
    max_multiqc_email_size          = '25.MB'
    multiqc_methods_description     = null

    // Boilerplate options
    outdir                          = 'results'
    publish_dir_mode                = 'copy'
    email                           = null
    email_on_fail                   = null
    plaintext_email                 = false
    monochrome_logs                 = false
    hook_url                        = null
    help                            = false
    validate_params                 = true
    schema_ignore_params            = 'modules,igenomes_base'
    version                         = false
    pipelines_testdata_base_path    = 'https://raw.githubusercontent.com/nf-core/test-datasets/'


    // Config options
    config_profile_name             = null
    config_profile_description      = null
    custom_config_version           = 'master'
    custom_config_base              = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact          = null
    config_profile_url              = null

    // Schema validation default options
    validate_params                 = true
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
    }
    pitis {
        params.annotation_tool         = 'bakta'
        params.gambitdb                = '/home/usuario/Databases/gambit/'
        params.baktadb_download        = true
        params.skip_kraken2            = true
        params.skip_kmerfinder         = true
        params.skip_pycoqc             = true
        params.skip_polish             = true
        params.skip_multiqc            = true
    }
    long {
        params.input                   = './samplesheet_long.tsv'
        params.assembler               = 'dragonflye'
        params.assembly_type           = 'long'
    }
    assembly {
        params.input                   = './samplesheet.tsv'
        params.assembly_type           = 'none'
    }
    test                    { includeConfig 'conf/test.config'                  }
    test_dfast              { includeConfig 'conf/test_dfast.config'            }
    test_hybrid             { includeConfig 'conf/test_hybrid.config'           }
    test_hybrid_dragonflye  { includeConfig 'conf/test_hybrid_dragonflye.config'}
    test_long               { includeConfig 'conf/test_long.config'             }
    test_long_miniasm       { includeConfig 'conf/test_long_miniasm.config'     }
    test_long_dragonflye    { includeConfig 'conf/test_long_dragonflye.config'  }
    test_full               { includeConfig 'conf/test_full.config'             }
}

// Establish technical process specifications
process {
    withLabel: process {
        cpus = 30
        memory = '100 GB'
    }
}

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Load nf-core/bacass custom profiles from different institutions.
// TODO nf-core: Optionally, you can add a pipeline-specific nf-core config at https://github.com/nf-core/configs
// includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/pipeline/bacass.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = """\
bash

set -e # Exit if a tool returns a non-zero status/exit code
set -u # Treat unset variables and parameters as an error
set -o pipefail # Returns the status of the last command to exit with a non-zero status or zero if all successfully execute
set -C # No clobber - prevent output redirection from overwriting files.
"""

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-core/bacass'
    author          = """Andreas Wilm, Alexander Peltzer, Daniel Straub, Daniel Valle-Millares"""
    homePage        = 'https://github.com/nf-core/bacass'
    description     = """Simple bacterial assembly and annotation"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=24.04.2'
    version         = '2.4.0dev'
    doi             = '10.5281/zenodo.2669428'
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.1.1' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    help {
        enabled = true
        command = "nextflow run $manifest.name -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText = """
-\033[2m----------------------------------------------------\033[0m-
                                        \033[0;32m,--.\033[0;30m/\033[0;32m,-.\033[0m
\033[0;34m        ___     __   __   __   ___     \033[0;32m/,-._.--~\'\033[0m
\033[0;34m  |\\ | |__  __ /  ` /  \\ |__) |__         \033[0;33m}  {\033[0m
\033[0;34m  | \\| |       \\__, \\__/ |  \\ |___     \033[0;32m\\`-._,-`-,\033[0m
                                        \033[0;32m`._,._,\'\033[0m
\033[0;35m  ${manifest.name} ${manifest.version}\033[0m
-\033[2m----------------------------------------------------\033[0m-
"""
        afterText = """${manifest.doi ? "* The pipeline\n" : ""}${manifest.doi.tokenize(",").collect { "  https://doi.org/${it.trim().replace('https://doi.org/','')}"}.join("\n")}${manifest.doi ? "\n" : ""}
* The nf-core framework
    https://doi.org/10.1038/s41587-020-0439-x

* Software dependencies
    https://github.com/${manifest.name}/blob/master/CITATIONS.md
"""
    }
    summary {
        beforeText = validation.help.beforeText
        afterText = validation.help.afterText
    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
